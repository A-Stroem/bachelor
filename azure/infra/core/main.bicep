// Target scope for deployment (Resource Group)
targetScope = 'resourceGroup'

// ==================================
//          PARAMETERS
// ==================================
// These parameters are exposed at the top level for the core networking deployment.

@description('Required. Specifies the Azure region where the resources will be deployed.')
param location string = resourceGroup().location

@description('Required. Specifies the environment name (e.g., dev, test, prod) used for resource naming and tagging.')
@allowed([
  'dev'
  'test'
  'uat'
  'prod'
])
param environmentName string = 'dev'

@description('Optional. Base name for the project or application, used in resource naming and tagging.')
param projectName string = 'bachelor'

@description('Optional. Instance number for uniqueness if deploying multiple stacks.')
param instanceNumber int = 1

@description('Required. The address space for the Virtual Network (e.g., "10.1.0.0/16").')
param vnetAddressPrefix string = '10.1.0.0/16'

@description('Required. The address prefix for the DevTest Labs subnet (e.g., "10.1.1.0/24").')
param devTestSubnetAddressPrefix string = '10.1.1.0/24'

@description('Required. The address prefix for the Azure Bastion subnet (e.g., "10.1.255.0/26"). MUST be /26 or larger.')
param bastionSubnetAddressPrefix string = '10.1.255.0/26'

@description('Required. The SKU for the Azure Bastion Host.')
@allowed([
  'Basic'
  'Standard'
])
param bastionSkuName string = 'Standard'

@description('Optional. Number of scale units for Standard SKU Bastion Host (min 2). Ignored for Basic SKU.')
param bastionScaleUnits int = 2

@description('Optional. Tags to apply to all resources created by the modules.')
param resourceTags object = {
  Environment: environmentName
  Project: projectName
  CreationDate: utcNow('yyyy-MM-dd') // Automatically set creation date
  CreatedBy: 'Bicep-Main' // Identify source
}

// ==================================
//          MODULES
// ==================================

@description('Deploys the Virtual Network and associated subnets.')
module networkingModule './network.bicep' = {
  // Corrected filename from networking.bicep to network.bicep
  name: 'deploy-networking-${environmentName}-${instanceNumber}' // Unique deployment name for the module
  params: {
    // Pass parameters down to the networking module
    location: location
    environmentName: environmentName
    projectName: projectName
    instanceNumber: instanceNumber
    vnetAddressPrefix: vnetAddressPrefix
    devTestSubnetAddressPrefix: devTestSubnetAddressPrefix
    bastionSubnetAddressPrefix: bastionSubnetAddressPrefix
    resourceTags: resourceTags
  }
}

@description('Deploys the Azure Bastion Host and its Public IP Address.')
module bastionModule './bastion.bicep' = {
  name: 'deploy-bastion-${environmentName}-${instanceNumber}' // Unique deployment name for the module
  params: {
    // Pass parameters down to the bastion module
    location: location
    environmentName: environmentName
    projectName: projectName
    instanceNumber: instanceNumber
    // Pass the VNet name generated by the networking module
    virtualNetworkName: networkingModule.outputs.vnetNameOutput // Assumes networking.bicep outputs the generated VNet name as 'vnetNameOutput'
    // virtualNetworkResourceGroupName: resourceGroup().name // Assumes VNet is in the same RG, parameter can be omitted if module defaults to current scope
    bastionSkuName: bastionSkuName
    bastionScaleUnits: bastionScaleUnits
    resourceTags: resourceTags
  }
  // Explicit dependency can be added, but passing the output from networkingModule creates an implicit dependency
  // dependsOn: [
  //   networkingModule
  // ]
}

// ==================================
//          OUTPUTS
// ==================================
// Expose key outputs from the modules for potential use by other deployments or for reference.

@description('The resource ID of the deployed Virtual Network.')
output vnetId string = networkingModule.outputs.vnetId

@description('The name of the deployed Virtual Network.')
output vnetName string = networkingModule.outputs.vnetNameOutput // Ensure networking.bicep has this output

@description('The resource ID of the deployed Azure Bastion host.')
output bastionHostId string = bastionModule.outputs.bastionHostId

@description('The name of the Azure Bastion host.')
output bastionHostName string = bastionModule.outputs.bastionHostNameOutput

@description('The resource ID of the DevTest Labs subnet.')
output devTestSubnetId string = networkingModule.outputs.devTestSubnetId

@description('The resource ID of the Public IP Address used by Bastion.')
output bastionPipId string = bastionModule.outputs.bastionPipId
